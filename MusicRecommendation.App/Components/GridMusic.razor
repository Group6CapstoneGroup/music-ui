@using MusicRecommendation.App.Models
@using MusicRecommendation.App.Common
@using Blazorise.DataGrid

@using System.IO
@using System.Text.Json
@using System.Text.Json.Serialization;
@using Microsoft.Extensions.Logging;
@inject IHttpClientFactory ClientFactory
@inherits GridMusicBase
@inject NavigationManager UriHelper

    @if (Songs == null)
    {

        <p><em>Loading....</em></p>

    }
    else
    {

        <div>
            <DataGrid TItem="Music"
                      Data="@Songs"
                      Sortable="true"
                      Editable="false"
                      ShowPager="true"
                      PageSize="10"
                      SelectionMode="DataGridSelectionMode.Multiple"
                      @bind-SelectedRows="selectedSongs"
                      Responsive>
                <DataGridMultiSelectColumn TItem="Music" Width="30px"></DataGridMultiSelectColumn>
                <DataGridColumn TItem="Music" Field="@nameof(Music.Artist)" Caption="Artist" Filterable="true"></DataGridColumn>
                <DataGridColumn TItem="Music" Field="@nameof(Music.Track)" Caption="Song" Filterable="true"></DataGridColumn>
                <DataGridColumn TItem="Music" Field="@nameof(Music.Album)" Caption="Album" Filterable="true"></DataGridColumn>
                <DataGridColumn TItem="Music" Field="@nameof(Music.Playlist)" Caption="Playlist" Filterable="true"></DataGridColumn>
            </DataGrid>
        </div>
        <button @onclick="@onRecommendationButtonClick">Recommendation Finder</button>

    }



    @code
{
        private List<Music> selectedSongs;


        protected override async Task OnInitializedAsync()
        {
            Songs = (await MusicService.GetSongs());

        }

        void isDisabled()
        {

        }


        async void onRecommendationButtonClick()
        {

            IEnumerable<Music> currentSelectedSongs = await MusicService.GetSelectedSongs();


            if(selectedSongs is not null)
            {
                foreach (var entry in selectedSongs)
                {

                  var postBody = entry;
                  await MusicService.CreateSelectedSongs(entry);
                }

                UriHelper.NavigateTo("/recommendations");
            }
        }

    }





