@using MusicRecommendation.App.Models
@using MusicRecommendation.App.Common
@using Blazorise.DataGrid
@using System.IO
@using System.Text.Json
@using System.Text.Json.Serialization;
@using Microsoft.Extensions.Logging;
@inject IHttpClientFactory ClientFactory

@if(songs == null)
{

    <p><em>Loading....</em></p>

}
else
{
    <div>
        <DataGrid TItem="Music" Data="@songs">
            <DataGridColumn TItem="Music" Field="@nameof(Music.Artist)" Caption="Artist"></DataGridColumn>
            <DataGridColumn TItem="Music" Field="@nameof(Music.Track)" Caption="Song"></DataGridColumn>
            <DataGridColumn TItem="Music" Field="@nameof(Music.Album)" Caption="Album"></DataGridColumn>
            <DataGridColumn TItem="Music" Field="@nameof(Music.Playlist)" Caption="Playlist"></DataGridColumn>
        </DataGrid>
    </div>

}



@code
{

    private List<Music> songs = new List<Music>();

    protected override async Task OnInitializedAsync()
    {


        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://localhost:44355/api/Music");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);
        Console.WriteLine("I am about to make the API call");
        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("I successfully made the GET all music call");
            var responseBody = await response.Content.ReadAsStringAsync();

            songs = JsonSerializer.Deserialize<List<Music>>(responseBody);

            Console.WriteLine(songs.Count);


        }
        else
        {
            System.Diagnostics.Debug.WriteLine("An error occured when fetching song data");
        }
    }
}




