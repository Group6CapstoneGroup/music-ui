@page "/recommendations"
@using MusicRecommendation.App.Components
@using MusicRecommendation.App.Models
@inherits GridMusicBase
@inject NavigationManager UriHelper
@inject IJSRuntime JSRuntime;

<html>
<head>
    <style>
        button {
            border-radius: 12px;
            background-color: #FF6549;
            border: none;
            padding: 10px;
            color: white;
            margin-top: 10px;
        }

        #addmore {
            border-radius: 12px;
            background-color: #C2248B;
            border: none;
            padding: 10px;
            color: white;
            margin-top: 10px;
        }

        #submit {
            border-radius: 12px;
            background-color: #2ECC71;
            border: none;
            padding: 10px;
            color: white;
            margin-top: 10px;
        }

        #recommendationTable {
            margin-top: 40px;
        }

        #addtoplaylist {
            border-radius: 12px;
            background-color: #2ECC71;
            border: none;
            padding: 10px;
            color: white;
            margin-top: 10px;
        }

        #spinner-loader {
            color: #5ADCC0;
        }
    </style>
</head>
<body>
    <div>
        <div>
            <h4>Make Recommendations Based On These Songs:</h4>
            <RecommendationSongTable />
            <button @onclick="@onDeleteButtonClick">Delete List</button>
            <button id="addmore" @onclick="@onAddMoreButtonClick">Add More Songs</button>
            <button id="submit" disabled="@IsSubmitTaskRunning" @onclick="@onSubmitButtonClick">Submit</button>
        </div>
        @if (loaderFlag == true)
        {
            <Loader />
        }
        <div id="recommendationTable">
            @if (showRecommendationComponent)
            {
                <h4>Here's your recommendations:</h4>
                <div><GridRecommendations mlList="_mlList" /></div>
            }

        </div>
    </div>
</body>
</html>
@code
    {

    //flag that pervents recommendations from showing as default
    bool showRecommendationComponent = false;

    //flag to disable submit button default to false
    bool IsSubmitTaskRunning = false;

    //set default loading flag to false
    bool loaderFlag = false;

    List<Music> _mlList = new List<Music>();

    private string responses;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("setTitle", "Tune Tip - Recommendations"); ;
    }


    void setLoading(bool entry)
    {
        loaderFlag = entry;
    }

    async void onDeleteButtonClick()
    {
        await MusicService.DeleteSelectedSongs();

        UriHelper.NavigateTo("/account");
    }

    void onAddMoreButtonClick()
    {

        UriHelper.NavigateTo("/account");
    }


    async void onSubmitButtonClick()
    {
        //disable submit button click once it's running the task to get recommendations
        IsSubmitTaskRunning = true;
        setLoading(true);

        RecommendationList = await MusicService.GetSelectedSongs();

        foreach (var song in RecommendationList)
        {
            responses = await MusicService.CreateRecommendationsRequest(song);
            string[] subs = responses.Split("%song%");
            Music myNewSong = new Music();
            myNewSong.Artist = subs[0];
            myNewSong.Track = subs[1];
            myNewSong.Playlist = "workout";
            myNewSong.Album = "null";

            _mlList.Add(myNewSong);

        }

        setLoading(false);

        showRecommendationComponent = true;

        IsSubmitTaskRunning = false;


        this.StateHasChanged();

    }

}
